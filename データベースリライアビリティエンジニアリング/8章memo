8章 リリースマネジメント

教育と強力
リリースマネジメントの第一歩として取り掛からなければならないことは
データベースに関する教育。
DBREとして進化するには
　データベース情報のキュレータとなる
　→情報を発信する
　データベース議論の触媒となる
　→他の人がデータベースへの興味をさらに掻き立てられるようにする。
　ドメイン固有知識
　→組織の固有ドメインに関する知識の共有が必要になる。

継続的インテグレーション
　前提条件
　CIをデータベースのレベルで構築するためには以下
　・バージョン管理システム
　・データベースの自動ビルド
　・テストデータ
　・マイグレーションとパッケージング
　・CIサーバとテストフレームワーク

テスト
　テストフレンドリな開発
　開発プロセスの中にはテストをより簡単に組み込むためのいくつかの施策がある。
　例としては以下
　・抽象化とカプセル化
　　データベースアクセスを抽象化しアクセスを集中させることが可能になり標準となる
　・効率的であれ
　　必要な情報のみ取得するなど無駄なことは避けるようにすること
　コミット後のテスト
　コミット後のテストの目的はアプリケーションが破損していないことを検証すること
　完全なデータセットを利用したテスト
　本番環境に移したときにSLOで規定したパフォーマンスに達していない場合もあるため、
　完全なデータセットを利用すること
　ダウンストリームテスト
　データベースに加えた変更によって一連のパフォーマンスが悪影響を受けないことを保証するためのもの
　運用テスト
　考えられる運用手順を実施し問題ないことを確認するためのテスト

デプロイメント
　マイグレーションとバージョン管理
　データベースに適用される各チェンジセットには数値バージョンをつけること。
　影響分析
　変更後にセキュリティコントロールが侵害されていないか、ストアドコードが無効になっていないかなどを確認する
　手動か自動か
　マイグレーションパターンによってDBREチームによるレビューや実行を待つ必要がなくなる。
　