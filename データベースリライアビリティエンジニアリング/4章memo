4章 オペレーションの見える化

・現在の見える化の標準仕様
　現在のOpVisは大規模な分散システムを前提としている。
　見える化をBIのように扱う
　　BIシステムを設計する場合、利用する担当者が何を知りたがっているかを考慮することから始める
　仮想環境におけるクラスタの見える化
　　最近ではクラスタを組んで動作させることが主流
　　動的に変化するインフラではメトリクスはホスト名やＩＰではなくロールごとに保存される
　高分解能でのメトリクス収集
　　1秒以下の目織クス収集間隔を保つことが重要
　　ただしディスクの空き容量などは間が空いても問題ない。
　アーキテクチャをシンプルに保つ
　　すべてを監視することは不可能。
　　どのメトリクスを見るか取捨選択が重要
・OpVizフレームワーク
　適切な情報を収集し準備するところから始める
・データの入力
　自前の環境から採掘したデータが利用可能ならそれを使う。
　もし十分な量のデータを収集することができるのであれば
　ホワイトボックスモニタリングを採用すべき。
　テレメトリ/メトリクス
　典型的なメトリクスは以下
　　カウンタ
　　ゲージ
　　ヒストグラム
　　サマリ
・データの出力
　出力する方法は以下
　　アラート
　　チケット/タスク
　　通知
　　自動化
　　見える化
・監視の第一歩
　まずは実装しなければならない監視を行うこと。それは以下
　　データベースプロセスの死活監視
　　全体のレイテンシとエラー率の監視
　　アプリケーションレイヤからデータベースを利用する際のレイテンシとエラー率
　　システム、ストレージ、データベース、アプリケーション
　　既知の問題について能動的にチェックする仕組み
　データは安全か
　　ミッションクリティカルなデータは少なくとも合計3つのレプリケーションのコピーを持たなくてはならない
　サービスは落ちていないか
　　エンドツーエンドの監視はサービス監視を利用する
　顧客のサービス体験に痛みが伴っていないか
・アプリケーションの計器
　まずはアプリケーションから実行する。
・サーバやインスタンスの計器
　アプリケーションができてからインフラ側を行う
・データベースの計器
　次がデータベース
・データベースの内部構造の見える化
　以下の項目について見える化を進める
　スループットとレイテンシのメトリクスの見える化
　コミット、再実行、ジャーナリングの見える化
　レプリケーション状態の見える化
　メモリ構造の見える化
　ロックと並行性の見える化
　
・データベース内のオブジェクトの見える化
・データベースクエリの見える化
・データベースのあさーととイベントの見える化